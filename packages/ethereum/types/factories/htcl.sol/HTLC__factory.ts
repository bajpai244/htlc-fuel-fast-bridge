/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { HTLC, HTLCInterface } from "../../htcl.sol/HTLC";

const _abi = [
  {
    type: "function",
    name: "computeLockHash",
    inputs: [
      {
        name: "lock",
        type: "tuple",
        internalType: "struct HTLC.Lock",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "destination",
            type: "address",
            internalType: "address payable",
          },
          {
            name: "sender",
            type: "address",
            internalType: "address payable",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "balance",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "expiryTimeSeconds",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "fee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "locks",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "timelock",
    inputs: [
      {
        name: "lock",
        type: "tuple",
        internalType: "struct HTLC.Lock",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "destination",
            type: "address",
            internalType: "address payable",
          },
          {
            name: "sender",
            type: "address",
            internalType: "address payable",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "balance",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "expiryTimeSeconds",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "fee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "unlock",
    inputs: [
      {
        name: "lock",
        type: "tuple",
        internalType: "struct HTLC.Lock",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "destination",
            type: "address",
            internalType: "address payable",
          },
          {
            name: "sender",
            type: "address",
            internalType: "address payable",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "balance",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "expiryTimeSeconds",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "fee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "digest",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "intent",
        type: "tuple",
        internalType: "struct HTLC.Signature",
        components: [
          {
            name: "v",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "r",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "s",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Locked",
    inputs: [
      {
        name: "lock",
        type: "tuple",
        indexed: false,
        internalType: "struct HTLC.Lock",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "destination",
            type: "address",
            internalType: "address payable",
          },
          {
            name: "sender",
            type: "address",
            internalType: "address payable",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "balance",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "expiryTimeSeconds",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "fee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "lockHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unlocked",
    inputs: [
      {
        name: "lock",
        type: "tuple",
        indexed: false,
        internalType: "struct HTLC.Lock",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "destination",
            type: "address",
            internalType: "address payable",
          },
          {
            name: "sender",
            type: "address",
            internalType: "address payable",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "balance",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "expiryTimeSeconds",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "fee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "refunded",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
      {
        name: "lockHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e6f806100206000396000f3fe60806040526004361061003f5760003560e01c80631d508a21146100445780631dbaa6e314610066578063dfbc739214610099578063ed5e8437146100ac575b600080fd5b34801561005057600080fd5b5061006461005f366004610c36565b6100ee565b005b34801561007257600080fd5b50610086610081366004610c81565b610784565b6040519081526020015b60405180910390f35b6100646100a7366004610c81565b6107f9565b3480156100b857600080fd5b506100dc6100c7366004610ca4565b60006020819052908152604090205460ff1681565b60405160ff9091168152602001610090565b60006100f984610784565b60008181526020819052604090205490915060ff166001146101735760405162461bcd60e51b815260206004820152602860248201527f6c6f636b20646f6573206e6f74206578697374206f7220686173206265656e206044820152671d5b9b1bd8dad95960c21b60648201526084015b60405180910390fd5b60008460a0013542101561048b5760008281526020818152604091829020805460ff19166002908117909155825191820187905260608801359290910160408051601f19818403018152908290526101ca91610cbd565b602060405180830381855afa1580156101e7573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061020a9190610cec565b146102485760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908191a59d95cdd60921b604482015260640161016a565b600060018361025a6020870187610d05565b604080516000815260208181018084529490945260ff9092168282015291870135606082015290860135608082015260a0016020604051602081039080840390855afa1580156102ae573d6000803e3d6000fd5b505060408051601f19015192506102cc915060608801908801610d40565b6001600160a01b0316816001600160a01b03160361032c5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161016a565b600061033b6020880188610d40565b6001600160a01b03160361039b576103596040870160208801610d40565b6001600160a01b03166108fc87608001359081150290604051600060405180830381858888f19350505050158015610395573d6000803e3d6000fd5b50610485565b6103a86020870187610d40565b6001600160a01b031663a9059cbb6103c66040890160208a01610d40565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152608089013560248201526044016020604051808303816000875af1158015610416573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043a9190610d5d565b15156001146104855760405162461bcd60e51b815260206004820152601760248201527618985b185b98d9481d1c985b9cd9995c8819985a5b1959604a1b604482015260640161016a565b50610743565b506000818152602081815260408220805460ff19166003179055600191906104b590870187610d40565b6001600160a01b031603610566576104d36060860160408701610d40565b6001600160a01b03166108fc6104f160c08801356080890135610d7f565b6040518115909202916000818181858888f19350505050158015610519573d6000803e3d6000fd5b5061052a6040860160208701610d40565b6001600160a01b03166108fc8660c001359081150290604051600060405180830381858888f19350505050158015610485573d6000803e3d6000fd5b6105736020860186610d40565b6001600160a01b031663a9059cbb6105916060880160408901610d40565b6105a360c089013560808a0135610d7f565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156105ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106129190610d5d565b151560011461065d5760405162461bcd60e51b815260206004820152601760248201527618985b185b98d9481d1c985b9cd9995c8819985a5b1959604a1b604482015260640161016a565b61066a6020860186610d40565b6001600160a01b031663a9059cbb6106886040880160208901610d40565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260c088013560248201526044016020604051808303816000875af11580156106d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fc9190610d5d565b15156001146107435760405162461bcd60e51b8152602060048201526013602482015272199959481d1c985b9cd9995c8819985a5b1959606a1b604482015260640161016a565b817fed89a0a4a40c9891ee57759f976bb7ac53561ff0f35bb966a2a4393b598e96e58683604051610775929190610e0d565b60405180910390a25050505050565b60006002826040516020016107999190610e2b565b60408051601f19818403018152908290526107b391610cbd565b602060405180830381855afa1580156107d0573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906107f39190610cec565b92915050565b60008160800135116108415760405162461bcd60e51b815260206004820152601160248201527062616c616e636520756e646572666c6f7760781b604482015260640161016a565b80608001358160c0013511156108885760405162461bcd60e51b815260206004820152600c60248201526b666565206f766572666c6f7760a01b604482015260640161016a565b600061089a6040830160208401610d40565b6001600160a01b0316036108e65760405162461bcd60e51b815260206004820152601360248201527234b73b30b634b2103232b9ba34b730ba34b7b760691b604482015260640161016a565b428160a00135116109325760405162461bcd60e51b815260206004820152601660248201527572656c656173652074696d6520756e646572666c6f7760501b604482015260640161016a565b600061093d82610784565b60008181526020819052604090205490915060ff16156109955760405162461bcd60e51b81526020600482015260136024820152726c6f636b20616c72656164792065786973747360681b604482015260640161016a565b60006109a46020840184610d40565b6001600160a01b0316036109fc57816080013534146109f75760405162461bcd60e51b815260206004820152600f60248201526e696e76616c69642062616c616e636560881b604482015260640161016a565b610bc7565b6080820135610a0e6020840184610d40565b6001600160a01b031663dd62ed3e610a2c6060860160408701610d40565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604401602060405180830381865afa158015610a76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9a9190610cec565b14610adb5760405162461bcd60e51b8152602060048201526011602482015270696e76616c696420616c6c6f77616e636560781b604482015260640161016a565b610ae86020830183610d40565b6001600160a01b03166323b872dd610b066060850160408601610d40565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152608085013560448201526064016020604051808303816000875af1158015610b5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b809190610d5d565b1515600114610bc75760405162461bcd60e51b81526020600482015260136024820152721d1c985b9cd9995c919c9bdb4819985a5b1959606a1b604482015260640161016a565b60008181526020819052604090819020805460ff191660011790555181907f6cb15ef8666d2252b3ebdc173fddf3a26c8bc57504c1c9974260ffcdbdea0bc190610c12908590610e2b565b60405180910390a25050565b600060e08284031215610c3057600080fd5b50919050565b6000806000838503610160811215610c4d57600080fd5b610c578686610c1e565b935060e08501359250606060ff1982011215610c7257600080fd5b50610100840190509250925092565b600060e08284031215610c9357600080fd5b610c9d8383610c1e565b9392505050565b600060208284031215610cb657600080fd5b5035919050565b6000825160005b81811015610cde5760208186018101518583015201610cc4565b506000920191825250919050565b600060208284031215610cfe57600080fd5b5051919050565b600060208284031215610d1757600080fd5b813560ff81168114610c9d57600080fd5b6001600160a01b0381168114610d3d57600080fd5b50565b600060208284031215610d5257600080fd5b8135610c9d81610d28565b600060208284031215610d6f57600080fd5b81518015158114610c9d57600080fd5b818103818111156107f357634e487b7160e01b600052601160045260246000fd5b8035610dab81610d28565b6001600160a01b039081168352602082013590610dc782610d28565b9081166020840152604082013590610dde82610d28565b166040830152606081810135908301526080808201359083015260a0808201359083015260c090810135910152565b6101008101610e1c8285610da0565b82151560e08301529392505050565b60e081016107f38284610da056fea2646970667358221220830b29673218095ce53b347b6c4c662f4493f7bbf6f705bc26f409ef5e678cb064736f6c63430008150033";

type HTLCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HTLCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HTLC__factory extends ContractFactory {
  constructor(...args: HTLCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HTLC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HTLC__factory {
    return super.connect(runner) as HTLC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HTLCInterface {
    return new Interface(_abi) as HTLCInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): HTLC {
    return new Contract(address, _abi, runner) as unknown as HTLC;
  }
}
